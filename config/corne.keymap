/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define ADJUST  3
#define LWR LOWER
#define RSE RAISE
#define ADJ ADJUST

&mt {
    quick-tap-ms = <180>;
    tapping-term-ms = <250>;
};

&lt {
    quick_tap_ms = <200>;
    tapping-term-ms = <180>;
};

/ {
    behaviors {
        //                 Key positions
        //       0  1  2  3  4  5    6  7  8  9 10 11
        //      12 13 14 15 16 17   18 19 20 21 22 23
        //      24 25 26 27 28 29   30 31 32 33 34 35
        //               36 37 38   39 40 41

        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                                         6  7  8  9 10
                       13 14 15 16      18 19 20 21 22
                          26            30 31 32 33 34
                             36 37 38   39 40 41
            >;

            // <---[[right-hand keys + all homerow mods + all thumbs]]
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <180>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <
                        1  2  3  4  5
                       13 14 15 16 17      19 20 21 22
                       25 26 27 28 29            33
                             36 37 38   39 40 41
            >;

            // <---[[left-hand keys + all homerow mods + all thumbs]]
        };

        lock: lock {
            compatible = "zmk,behavior-tap-dance";
            label = "LOCK";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&kp K_LOCK>;

            tapping-term-ms = <200>;
        };

        lang: lang {
            compatible = "zmk,behavior-tap-dance";
            label = "LANG";
            #binding-cells = <0>;
            bindings = <&lt 2 ENTER>, <&lang_m>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESC>;
            key-positions = <1 13>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <25 13>;
        };

        backspase {
            bindings = <&kp BACKSPACE>;
            key-positions = <10 22>;
        };

        del {
            bindings = <&kp DEL>;
            key-positions = <22 34>;
        };

        retKM {
            bindings = <&kp ENTER>;
            key-positions = <20 31>;
        };

        capsJK {
            bindings = <&kp CAPSLOCK>;
            key-positions = <19 20>;
        };

        sqbrRT {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <4 5>;
        };

        rsqbrYU {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <6 7>;
        };

        lsqparFG {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        rsqparHJ {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <18 19>;
        };

        tabDF {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    macros {
        lang_m: lang_m {
            compatible = "zmk,behavior-macro";
            label = "LANG_M";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&kp SPACE>,
                <&macro_release>,
                <&kp LGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q        &kp W        &kp E           &kp R           &kp T    &kp Y  &kp U             &kp I               &kp O        &kp P           &none
&none  &hml LCMD A  &hml RALT S  &hml LCTRL D    &hml LSHFT F    &kp G    &kp H  &hmr RSHFT J      &hmr RCTRL K        &hmr RALT L  &hmr RCMD SEMI  &none
&none  &kp Z        &lt 2 X      &kp C           &kp V           &kp B    &kp N  &kp M             &kp COMMA           &lt 2 DOT    &kp FSLH        &none
                                 &mt LALT GRAVE  &lt 1 CAPSLOCK  &lock    &lang  &lt 1 APOSTROPHE  &mt RALT BACKSLASH
            >;
        };

        lower_layer {
            bindings = <
&none  &kp LA(N1)             &kp LA(N2)         &kp LA(N3)              &kp LA(N4)            &kp LA(N5)               &kp EQUAL     &kp N7                     &kp N8                 &kp N9                   &kp PLUS              &none
&none  &hml LCMD EXCLAMATION  &hml LALT AT_SIGN  &hml LEFT_CONTROL HASH  &hml LSHIFT DOLLAR    &kp PERCENT              &kp MINUS     &hmr RIGHT_SHIFT NUMBER_4  &hmr RIGHT_CONTROL N5  &hmr RIGHT_ALT NUMBER_6  &hmr RCMD UNDERSCORE  &none
&none  &kp CARET              &kp AMPERSAND      &kp ASTERISK            &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS    &kp NUMBER_0  &kp NUMBER_1               &kp NUMBER_2           &kp NUMBER_3             &kp QUESTION          &none
                                                 &lt RSE ESC             &lt LWR PRINTSCREEN   &lt 2 SPACE              &mt RCMD RET  &mo RSE                    &lt LWR TAB
            >;
        };

        raise_layer {
            bindings = <
&none  &kp LG(NUMBER_1)  &kp LG(NUMBER_2)  &kp LG(NUMBER_3)  &kp LG(NUMBER_4)  &kp LG(N5)    &kp LG(Q)      &kp LG(LS(M))    &kp LG(F)            &kp RG(O)        &kp RG(P)            &none
&none  &hml LCMD F1      &hml LALT F2      &hml LCTRL F3     &hml LSHFT F4     &kp F5        &kp LEFT       &hmr RSHFT DOWN  &hmr RCTRL UP_ARROW  &hmr RALT RIGHT  &hmr RCMD LG(LS(Z))  &none
&none  &kp F6            &kp F7            &kp F8            &kp F9            &kp F10       &kp HOME       &kp PAGE_DOWN    &kp PG_UP            &kp END          &kp INSERT           &none
                                           &mt LEFT_ALT F11  &lt 1 F12         &kp LG(D)     &mt RSHFT RET  &lt 2 LG(H)      &mt RIGHT_ALT RG(L)
            >;
        };

        adjust_layer {
            bindings = <
&none  &bt BT_CLR    &none         &none         &none         &none           &none         &kp K_MUTE    &none  &none  &bootloader  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp C_BRI_UP  &kp C_VOL_UP  &none  &none  &none        &none
&none  &none         &none         &none         &none         &none           &kp C_BRI_DN  &kp C_VOL_DN  &none  &none  &none        &none
                                   &none         &none         &none           &none         &none         &none
            >;
        };
    };
};
